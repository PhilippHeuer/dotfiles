---
# check
- name: sd > check version
  command: "sd --version"
  register: sd_version_output
  ignore_errors: true

# download
- name: sd > download
  environment: "{{ proxy_env }}"
  get_url:
    url: "https://github.com/chmln/sd/releases/download/v{{ sd_version }}/sd-v{{ sd_version }}-x86_64-unknown-linux-gnu.tar.gz"
    dest: "/tmp/sd-{{ sd_version }}-linux-amd64.tar.gz"
  when: "sd_version not in sd_version_output.stdout | default('')"

# create dir
- name: sd > create dir
  file:
    path: "/tmp/sd-{{ sd_version }}-linux-amd64"
    state: directory
    mode: 0755
  when: "sd_version not in sd_version_output.stdout | default('')"

# extract
- name: sd > extract
  ansible.builtin.unarchive:
    src: "/tmp/sd-{{ sd_version }}-linux-amd64.tar.gz"
    dest: "/tmp/sd-{{ sd_version }}-linux-amd64"
    remote_src: yes
    extra_opts:
    - --strip-components=1
  when: "sd_version not in sd_version_output.stdout | default('')"

# install
- name: sd > install
  ansible.builtin.copy:
    src: "/tmp/sd-{{ sd_version }}-linux-amd64/sd"
    dest: "{{ ansible_env.HOME }}/.local/bin/sd"
    mode: 0755
  when: "sd_version not in sd_version_output.stdout | default('')"

- name: sd > completions
  ansible.builtin.copy:
    src: "/tmp/sd-{{ sd_version }}-linux-amd64/completions/sd.bash"
    dest: "{{ ansible_env.HOME }}/.local/share/bash-completion/completions/sd.bash"
    mode: 0755
  when: "sd_version not in sd_version_output.stdout | default('')"
